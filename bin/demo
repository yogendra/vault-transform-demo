#!/usr/bin/env bash

set -Eeuo pipefail
COMMAND=$0
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
SCRIPT=${BASH_SOURCE[0]}

export PROJECT_DIR=${PROJECT_DIR:-$(cd $SCRIPT_DIR/..; pwd)}
export DOCKER_COMPOSE_DIR=$PROJECT_DIR/docker-compose
export DOCKER_COMPOSE_FILE=$DOCKER_COMPOSE_DIR/docker-compose.yml

function banner(){
    echo ================================================================================
    echo "$@"
    echo ================================================================================
}

function help(){
  banner Demo Env Information
  cat <<EOF
Application and Consoles
Vault UI       : http://localhost:8200
YugabyteDB UI  : http://localhost:15433
Demo App UI    : http://localhost:7070
SQLPad         : http://localhost:3000

Useful Commands
$COMMAND add-sample-data  - add sample data
$COMMAND help             - this screen
$COMMAND start            - start infra and apps
$COMMAND start-apps       - start infra containers
$COMMAND start-infra      - start infra containers
$COMMAND stop             - stop demo containers
$COMMAND truncate-data    - truncate database table
$COMMAND watch            - look are container logs
EOF

}
function start(){
  set +ex
  banner Start
  start-infra
  start-apps
  sleep 10
  help
}
function status(){
  banner Status
  docker-compose -f $DOCKER_COMPOSE_FILE top
}
function start-infra(){
  banner Start Infra
  clean
  docker-compose -f $DOCKER_COMPOSE_FILE up vault-agent sqlpad -d
}
function start-apps(){
  banner Start Apps
  docker-compose -f $DOCKER_COMPOSE_FILE up transform-demo-api transform-demo-ui -d
}

function add-sample-data(){
  banner Add Sample Data
  curl 'http://localhost:7070/encrypt?transit=1&username=Yogi%20transit&password=passw0rd&email=YogiTransformation@Example.com&creditcard=1111-2222-3333-4444' -X POST
  curl 'http://localhost:7070/encrypt?transformation=1&username=Yogi%20transformation&password=passw0rd&email=YogiTransformation@Example.com&creditcard=2111-2222-3333-4444' -X POST
  curl 'http://localhost:7070/encrypt?simple-transformation=1&username=Yogi%20simple-transformation&password=passw0rd&email=YogiTransformation@Example.com&creditcard=3111-2222-3333-4444' -X POST
  curl 'http://localhost:7070/encrypt?simplest-transformation=1&username=Yogi%20simplest-transformation&password=passw0rd&email=YogiTransformation@Example.com&creditcard=4111-2222-3333-4444' -X POST
  curl 'http://localhost:7070/encrypt?default-tokenization=1&username=Yogi%20default-tokenization&password=passw0rd&email=YogiTransformation@Example.com&creditcard=2111-5222-3333-4444' -X POST
  curl 'http://localhost:7070/encrypt?convergent-tokenization=1&username=Yogi%20convergent-tokenization&password=passw0rd&email=YogiTransformation@Example.com&creditcard=6111-2222-3333-4444' -X POST
}
function truncate-data(){
  docker-compose -f $DOCKER_COMPOSE_FILE exec -e PGPASSWORD=yugabyte -it yugabytedb ysqlsh -h yugabytedb -d demo -U yugabyte -c 'TRUNCATE TABLE users_tokenization;'
}

function watch(){
    banner Watch logs
    docker-compose -f $DOCKER_COMPOSE_FILE logs -f
}

function stop(){
    set +ex
    banner Stop
    docker-compose -f $DOCKER_COMPOSE_FILE down --remove-orphans -v
    rm $DOCKER_COMPOSE_DIR/scripts/vault.json $DOCKER_COMPOSE_DIR/vault-agent/token $DOCKER_COMPOSE_DIR/vault-agent/role_id $DOCKER_COMPOSE_DIR/vault-agent/secret_id || echo "no leftovers"
}

OP=${1:-start}; shift
$OP
