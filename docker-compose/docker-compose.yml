version: '3.7'

networks:
  vault-demo:
    ipam:
      driver: default
      config:
        - subnet: "10.5.0.0/16"

services:
  vault:
    profiles: ["backend" ]
    depends_on:
      yugabytedb-init:
        condition: service_completed_successfully
    image: hashicorp/vault-enterprise:latest
    restart: always
    volumes:
      - ./vault:/vault/config:rw
      - ./vault/audit_logs:/var/log/vault:rw
      - /vault/data
    ports:
      - "8200:8200/tcp"
    cap_add:
      - IPC_LOCK
    container_name: vault
    entrypoint: "vault server -config=/vault/config"
    environment:
      - VAULT_LICENSE=${VAULT_LICENSE}
    networks:
      - vault-demo
  yugabytedb:
    profiles: ["backend"]
    image: yogendra/yugabyte:2.18.4.0-b52
    container_name: yugabytedb
    restart: always
    command: bin/yugabyted start --daemon=false
    ports:
      - "5433:5433/tcp"
      - "15433:15433/tcp"
    environment:
      - YSQL_USER=demo
      - YSQL_PASSWORD=passw0rd
      - YSQL_DB=demo
    networks:
      - vault-demo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://yugabytedb:15433"]
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  vault-agent:
    profiles: ["frontend"]
    image: hashicorp/vault-enterprise:latest
    restart: always
    depends_on: [ vault ]
    volumes:
      - ./vault-agent/:/vault/config
    ports:
      - "8100:8100/tcp"
    cap_add:
      - IPC_LOCK
    container_name: vault-agent
    entrypoint: "vault agent -config=/vault/config/agent.hcl"
    environment:
      - VAULT_LICENSE=${VAULT_LICENSE}
    networks:
      - vault-demo
  transform-demo-api:
    profiles: ["frontend"]
    image: nicklhw/transform-demo-api
    container_name: transform-demo-api
    restart: always
    depends_on: [vault-agent]
    build:
      context: ../demo-api
    ports:
      - "8081:8080"
    environment:
      - SPRING_CLOUD_VAULT_HOST=vault-agent
      - SPRING_DATASOURCE_URL=jdbc:yugabytedb://demo@passw0rd:yugabytedb:5433/demo
    entrypoint: "java -jar /app/transform-demo-api-0.0.1-SNAPSHOT.jar"
    networks:
      - vault-demo
  transform-demo-ui:
    profiles: [ "frontend" ]
    image: nicklhw/transform-demo-ui
    container_name: transform-demo-ui
    restart: always
    depends_on: [ transform-demo-api ]
    build:
      context: ../demo-ui
    ports:
      - "7071:7070"
    environment:
      - API_ADDRESS=http://transform-demo-api:8080
    entrypoint: "java -jar /app/transform-demo-ui-0.0.1-SNAPSHOT.jar"
    networks:
      - vault-demo
  yugabytedb-init:
    profiles: ["backend"]
    image: yogendra/yugabyte:2.18.4.0-b52
    container_name: yugabytedb-init
    restart: on-failure
    environment:
    - YSQL_USER=demo
    - YSQL_PASSWORD=passw0rd
    - YSQL_DB=demo
    volumes:
    - ./yugabytedb/init.sql:/init.sql
    command:
    - bash
    - -c
    - |
      echo -n "Waiting for yugabytedb to be ready"
      export PGPASSWORD=$$YSQL_PASSWORD
      export PGUSER=$$YSQL_USER
      export PGDATABASE=$$YSQL_DB
      export PGHOST=yugabytedb
      export PGPORT=5433

      until postgres/bin/pg_isready -t 1  &> /dev/null; do echo -n '.'; done
      echo " OK"
      bin/ysqlsh -c 'select version(); select * from yb_servers(); select * from inet_server_addr();'
      bin/ysqlsh -a -f /init.sql
    networks:
      - vault-demo
    depends_on:
      yugabytedb:
        condition: service_healthy

  yugabytedb-sample:
    profiles: ["backend"]
    image: yogendra/yugabyte:2.18.4.0-b52
    container_name: yugabytedb-sample
    restart: on-failure
    environment:
    - YSQL_USER=demo
    - YSQL_PASSWORD=passw0rd
    - YSQL_DB=demo
    command:
    - bash
    - -c
    - |
      export PGPASSWORD=$$YSQL_PASSWORD
      export PGUSER=$$YSQL_USER
      export PGDATABASE=$$YSQL_DB
      export PGHOST=yugabytedb
      export PGPORT=5433
      bin/ysqlsh -a -c "select version(); select 'Hello, World!' greeting;"
    networks:
      - vault-demo
    depends_on:
      yugabytedb-init:
        condition: service_completed_successfully
